
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;

public class TarifJFrame extends javax.swing.JFrame {

    public TarifJFrame() {
        initComponents();
        loadTarifler();
        loadKategoriler();
    }

    // Tarifleri yükleyip JTable'a ekler
    public void loadTarifler() {
        ResultSet rs = DbHelper.getTarifler();  // Veritabanından tarifleri getir
        DefaultTableModel tableModel = (DefaultTableModel) tarifTable.getModel();
        tableModel.setRowCount(0);  // Tabloyu sıfırla

        try {
            while (rs != null && rs.next()) {
                String tarifID = rs.getString("KategoriAdi");
                String tarifAdi = rs.getString("TarifAdi");
                int hazirlamaSuresi = rs.getInt("HazirlamaSuresi");
                double maliyet = rs.getDouble("Maliyet");
                // Maliyeti formatla: noktadan sonra iki basamak göster
                String formattedMaliyet = String.format("%.2f", maliyet);

                tableModel.addRow(new Object[]{tarifID, tarifAdi, hazirlamaSuresi, formattedMaliyet});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // ResultSet, Statement ve Connection nesnelerini kapatma
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    // ComboBox'a malzemeleri ekler
    private void loadKategoriler() {
        try {
            ResultSet rs = DbHelper.getKategoriler();
            kategori_comboBox.removeAllItems();  // ComboBox'ı temizle
            while (rs.next()) {
                kategori_comboBox.addItem(rs.getString("KategoriAdi"));  // Kategorileri ekle
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public String getTarifAdi() {
        return txt_tarifadi.getText();
    }

    public String getKategori() {
        return (String) kategori_comboBox.getSelectedItem();
    }

    public String getSure() {
        return txt_sure.getText();
    }

    public String getTalimatlar() {
        return txt_talimat.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tarifTable = new javax.swing.JTable();
        buton_ekle = new javax.swing.JButton();
        buton_guncelle = new javax.swing.JButton();
        buton_sil = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_talimat = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_tarifadi = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_sure = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        kategori_comboBox = new javax.swing.JComboBox<>();
        buton_ara = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tarifTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kategori", "Tarif Adı", "Hazırlama Süresi", "Maliyeti"
            }
        ));
        tarifTable.setShowGrid(true);
        tarifTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tarifTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tarifTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, 360));

        buton_ekle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buton_ekle.setText("Tarif Ekle");
        buton_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton_ekleActionPerformed(evt);
            }
        });
        getContentPane().add(buton_ekle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 103, -1));

        buton_guncelle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buton_guncelle.setText("Tarif Güncelle");
        buton_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton_guncelleActionPerformed(evt);
            }
        });
        getContentPane().add(buton_guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, -1, -1));

        buton_sil.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buton_sil.setText("Tarif Sil");
        buton_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton_silActionPerformed(evt);
            }
        });
        getContentPane().add(buton_sil, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 103, -1));

        jScrollPane2.setViewportView(txt_talimat);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 264, 77));

        jScrollPane4.setViewportView(txt_tarifadi);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 140, -1));

        jScrollPane5.setViewportView(txt_sure);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 90, -1));

        jLabel1.setForeground(new java.awt.Color(245, 245, 220));
        jLabel1.setText("Tarif Adı");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel2.setForeground(new java.awt.Color(245, 245, 220));
        jLabel2.setText("Kategorisi");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        jLabel3.setForeground(new java.awt.Color(245, 245, 220));
        jLabel3.setText("Hazırlama Süresi");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabel4.setForeground(new java.awt.Color(245, 245, 220));
        jLabel4.setText("Talimatları");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        kategori_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(kategori_comboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        buton_ara.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buton_ara.setText("TARİF ARAMA/FİLTRELEME");
        buton_ara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton_araActionPerformed(evt);
            }
        });
        getContentPane().add(buton_ara, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, 68));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JFrame1.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 500, 500));

        jLabel6.setForeground(new java.awt.Color(245, 245, 220));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("(dakika)");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, -1, 20));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JFrame1side.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buton_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton_ekleActionPerformed
        // Gerekli alanlardan bilgileri al
        String tarifAdi = txt_tarifadi.getText();
        String kategoriAdi = (String) kategori_comboBox.getSelectedItem();
        String sureStr = txt_sure.getText();
        String talimatlar = txt_talimat.getText();

        // Boş alanların kontrolü
        if (tarifAdi.isEmpty() || kategoriAdi.isEmpty() || sureStr.isEmpty() || talimatlar.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lütfen tüm alanları doldurun!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tarif adının zaten mevcut olup olmadığını kontrol et
        if (DbHelper.isTarifAdiMevcut(tarifAdi)) {
            JOptionPane.showMessageDialog(this, "Aynı tarif adıyla tarif mevcut.", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Hazırlama süresini kontrol et (Pozitif sayı mı?)
            int sure = Integer.parseInt(sureStr);
            if (sure <= 0) {
                throw new NumberFormatException();
            }

            // Tüm alanlar doluysa yeni pencereyi aç
            MalzemeJDialog malzemeJDialog = new MalzemeJDialog(this, true, this);  // Dialog modal (odaklı) olarak açılır
            malzemeJDialog.setVisible(true);

            // Alanları temizle
            txt_tarifadi.setText("");
            txt_sure.setText("");
            txt_talimat.setText("");

        } catch (NumberFormatException e) {
            // Geçersiz tarif süresi girdisi
            JOptionPane.showMessageDialog(this, "Geçerli tarif süresi girilmemiştir.", "Hata", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buton_ekleActionPerformed

    private void buton_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton_guncelleActionPerformed
        // Gerekli alanlardan bilgileri al
        String tarifAdi = txt_tarifadi.getText();
        String kategoriAdi = (String) kategori_comboBox.getSelectedItem();
        String sureStr = txt_sure.getText();
        String talimatlar = txt_talimat.getText();

        // Boş alanların kontrolü
        if (tarifAdi.isEmpty() || kategoriAdi.isEmpty() || sureStr.isEmpty() || talimatlar.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lütfen tüm alanları doldurun!", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tarif adının zaten mevcut olup olmadığını kontrol et
        if (!DbHelper.isTarifAdiMevcut(tarifAdi)) {
            JOptionPane.showMessageDialog(this, "Aynı tarif adıyla tarif mevcut değil.", "Hata", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Hazırlama süresini kontrol et (Pozitif sayı mı?)
            int sure = Integer.parseInt(sureStr);
            if (sure <= 0) {
                throw new NumberFormatException();
            }

            // Tüm alanlar doluysa yeni pencereyi aç
            MalzemeJDialog malzemeJDialog = new MalzemeJDialog(this, true, this);  // Dialog modal (odaklı) olarak açılır
            malzemeJDialog.setVisible(true);

            // Alanları temizle
            txt_tarifadi.setText("");
            txt_sure.setText("");
            txt_talimat.setText("");

        } catch (NumberFormatException e) {
            // Geçersiz tarif süresi girdisi
            JOptionPane.showMessageDialog(this, "Geçerli tarif süresi girilmemiştir.", "Hata", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buton_guncelleActionPerformed

    private void buton_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton_silActionPerformed
        // Tarif adı boş mu diye kontrol et
        if (txt_tarifadi.getText().isEmpty()) {
            // Eğer tarif adı boşsa uyarı mesajı göster
            JOptionPane.showMessageDialog(this, "Lütfen silmek için bir tarif adı girin!", "Hata", JOptionPane.ERROR_MESSAGE);
        } else if (!DbHelper.isTarifAdiMevcut(txt_tarifadi.getText())) {
            JOptionPane.showMessageDialog(this, "Lütfen silmek için var olan bir tarif adı girin!", "Başarılı", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DbHelper.deleteTarifByAdi(txt_tarifadi.getText());
            loadTarifler();
            JOptionPane.showMessageDialog(this, "Tarif Silme gerçekleştirildi.", "Başarılı", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_buton_silActionPerformed

    private void tarifTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tarifTableMouseClicked
        int row = tarifTable.getSelectedRow();
        if (row != -1) {
            String tarifAdi = tarifTable.getValueAt(row, 1).toString();
            String kategori = tarifTable.getValueAt(row, 0).toString(); // Bu kategori adı olarak ayarlandı
            int sure = Integer.parseInt(tarifTable.getValueAt(row, 2).toString());

            // Veritabanından tarif detaylarını al (Malzemeler ve talimatlar)
            Object[][] malzemeler = DbHelper.getTarifMalzemeleri(tarifAdi);
            String talimatlar = DbHelper.getTarifTalimatlar(tarifAdi);

            // Yeni dialog penceresini aç
            TarifDetayJDialog detayDialog = new TarifDetayJDialog(this, tarifAdi, kategori, sure, talimatlar, malzemeler, true);
            detayDialog.setVisible(true);
        }
    }//GEN-LAST:event_tarifTableMouseClicked

    private void buton_araActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton_araActionPerformed
        TarifAraJFrame tarif_araJFrame = new TarifAraJFrame();
        tarif_araJFrame.setVisible(true);
        //this.setVisible(false);
    }//GEN-LAST:event_buton_araActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TarifJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TarifJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TarifJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TarifJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TarifJFrame tarifFrame = new TarifJFrame();
                tarifFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buton_ara;
    private javax.swing.JButton buton_ekle;
    private javax.swing.JButton buton_guncelle;
    private javax.swing.JButton buton_sil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JComboBox<String> kategori_comboBox;
    private javax.swing.JTable tarifTable;
    private javax.swing.JTextPane txt_sure;
    private javax.swing.JTextPane txt_talimat;
    private javax.swing.JTextPane txt_tarifadi;
    // End of variables declaration//GEN-END:variables

}
